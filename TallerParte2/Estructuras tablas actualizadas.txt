-------------------------------------------------------
--  DDL for Table PILOTOS
--------------------------------------------------------

  CREATE TABLE "PILOTOS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"NIVEL_INGLES" VARCHAR2(50 BYTE), 
	"CARGO" VARCHAR2(50 BYTE), 
	"CANTIDAD_HORAS_ACUMULADAS" NUMBER, 
	"TIPO_LICENCIA" VARCHAR2(50 BYTE), 
	"ID_EMPLEADO" NUMBER
    );
--------------------------------------------------------
--  DDL for Table AEROPUERTOS
--------------------------------------------------------

  CREATE TABLE "AEROPUERTOS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"NOMBRE" VARCHAR2(200 BYTE), 
	"LONGITUD" VARCHAR2(50 BYTE), 
	"LATITUD" VARCHAR2(50 BYTE), 
	"ID_CIUDAD" NUMBER
   ); 
--------------------------------------------------------
--  DDL for Table LOGS
--------------------------------------------------------

  CREATE TABLE "LOGS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"HORA" NCHAR(80), 
	"UTC" NCHAR(89), 
	"ALTITUD" VARCHAR2(50 BYTE), 
	"VELOCIDAD" VARCHAR2(50 BYTE), 
	"DIRECCION" VARCHAR2(50 BYTE), 
	"LONGITUD" VARCHAR2(50 BYTE), 
	"LATITUD" VARCHAR2(50 BYTE), 
	"ID_ITINERARIO" NUMBER
   );
--------------------------------------------------------
--  DDL for Table PROGRAMACION_TRIPULANTES
--------------------------------------------------------

  CREATE TABLE "PROGRAMACION_TRIPULANTES" 
   (	"ID" NUMBER PRIMARY KEY, 
	"ID_ITINERARIO" NUMBER NOT NULL, 
	"ID_EMPLEADO" NUMBER NOT NULL
   );
--------------------------------------------------------
--  DDL for Table ITINERARIOS
--------------------------------------------------------

  CREATE TABLE "ITINERARIOS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"HORA_ESTIMADA_SALIDA" TIMESTAMP (6), 
	"HORA_REAL_SALIDA"  TIMESTAMP (6),  
	"ESTADO" VARCHAR2(50 BYTE), 
	"TOTAL_PASAJEROS_PRIMERACLASE" NUMBER, 
	"TOTAL_PASAJEROS_CLASEECONOMICA" NUMBER, 
	"DURACION_REAL" NUMBER, 
	"HORA_ESTIMADA_LLEGADA"  TIMESTAMP (6),  
	"HORA_REAL_LLEGADA"  TIMESTAMP (6),  
	"ID_VUELO" NUMBER NOT NULL, 
	"ID_PILOTO" NUMBER, 
	"ID_COPILOTO" NUMBER, 
	"ID_AVION" NUMBER
   );
--------------------------------------------------------
--  DDL for Table AVIONES
--------------------------------------------------------

  CREATE TABLE "AVIONES" 
   (	"ID" NUMBER PRIMARY KEY, 
	"MATRICULA" VARCHAR2(50 BYTE), 
	"NUMERO_SERIAL" VARCHAR2(50 BYTE), 
	"EDAD" VARCHAR2(50 BYTE), 
	"NUM_ASIENTOS_PRIMERA_CLASE" NUMBER, 
	"NUM_ASIENTOS_CLASE_ECONOMICA" NUMBER, 
	"MARCA" VARCHAR2(50 BYTE), 
	"ESTADO" VARCHAR2(100 BYTE), 
	"ID_AEROPUERTO" NUMBER
   );
--------------------------------------------------------
--  DDL for Table RUTAS
--------------------------------------------------------

  CREATE TABLE "RUTAS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"DURACION_PROMEDIO" NUMBER, 
	"DISTANCIA" VARCHAR2(30 BYTE), 
	"NUMERO_DE_VUELO" VARCHAR2(30 BYTE), 
	"ID_AEROPUERTO_ORIGEN" NUMBER, 
	"ID_AEROPUERTO_DESTINO" NUMBER
   );
--------------------------------------------------------
--  DDL for Table PASAJEROS
--------------------------------------------------------

  CREATE TABLE "PASAJEROS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"NOMBRES" VARCHAR2(50 BYTE), 
	"APELLIDOS" VARCHAR2(50 BYTE), 
	"EDAD" NUMBER, 
	"IDENTIFICACION" NUMBER, 
	"TIPO_DOCUMENTO" VARCHAR2(50 BYTE)
   );
--------------------------------------------------------
--  DDL for Table CHECKIN
--------------------------------------------------------

  CREATE TABLE "CHECKIN" 
   (	"ID" NUMBER PRIMARY KEY, 
	"TIPO" VARCHAR2(30 BYTE), 
	"CONTACTO_EMERGENCIA" VARCHAR2(50 BYTE), 
	"CORREO_CONTACTO_EMERGENCIA" VARCHAR2(50 BYTE), 
	"TELEFONO_CONTACTO_EMERGENCIA" NUMBER, 
	"ID_ITINERARIO" NUMBER, 
	"ID_PASAJERO" NUMBER, 
	"ID_CIUDAD" NUMBER
   );
--------------------------------------------------------
--  DDL for Table EMPLEADOS
--------------------------------------------------------

  CREATE TABLE "EMPLEADOS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"TIPO" VARCHAR2(50 BYTE), 
	"NOMBRES" VARCHAR2(50 BYTE), 
	"APELLIDOS" VARCHAR2(50 BYTE), 
	"SEXO" VARCHAR2(20 BYTE),
	"FECHA_NACIMIENTO" NCHAR(50), 
	"ANTIGUEDAD" NUMBER, 
	"FECHA_ULTIMO_ENTRENAMIENTO" NCHAR(50), 
	"DIRECCION" VARCHAR2(60 BYTE), 
	"CORREO" VARCHAR2(50 BYTE), 
	"CELULAR" NCHAR(50), 
	"ESTADO" VARCHAR2(50 BYTE), 
	"HORAS_DESCANSO_ULTIMO_VUELO" NUMBER, 
	"ID_CIUDAD" NUMBER
   );
--------------------------------------------------------
--  DDL for Table CIUDADES
--------------------------------------------------------

  CREATE TABLE "CIUDADES" 
   (	"ID" NUMBER PRIMARY KEY, 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"PAIS" VARCHAR2(50 BYTE)
   );
--------------------------------------------------------
--  DDL for Table VUELOS
--------------------------------------------------------

  CREATE TABLE "VUELOS" 
   (	"ID" NUMBER PRIMARY KEY, 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"FRECUENCIA_SEMANAL" NUMBER, 
	"ID_RUTA" NUMBER
   );
   
   -----------------------------
   
   
ALTER TABLE RUTAS
ADD CONSTRAINT FK_ID_AEROPUERTO_ORIGEN
FOREIGN KEY (ID_AEROPUERTO_ORIGEN)
REFERENCES AEROPUERTOS(ID);

ALTER TABLE RUTAS
ADD CONSTRAINT FK_ID_AEROPUERTO_DESTINO
FOREIGN KEY (ID_AEROPUERTO_DESTINO)
REFERENCES AEROPUERTOS(ID);

ALTER TABLE VUELOS
ADD CONSTRAINT FK_ID_RUTA
FOREIGN KEY (ID_RUTA)
REFERENCES RUTAS(ID);

ALTER TABLE ITINERARIOS
ADD CONSTRAINT FK_ID_VUELO
FOREIGN KEY (ID_VUELO)
REFERENCES VUELOS(ID);

ALTER TABLE ITINERARIOS
ADD CONSTRAINT FK_ID_PILOTO
FOREIGN KEY (ID_PILOTO)
REFERENCES PILOTOS(ID);

ALTER TABLE ITINERARIOS
ADD CONSTRAINT FK_ID_COPILOTO
FOREIGN KEY (ID_COPILOTO)
REFERENCES PILOTOS(ID);

ALTER TABLE ITINERARIOS
ADD CONSTRAINT FK_ID_AVION
FOREIGN KEY (ID_AVION)
REFERENCES AVIONES(ID);


ALTER TABLE PROGRAMACION_TRIPULANTES
ADD CONSTRAINT FK_ID_ITINERARIO
FOREIGN KEY (ID_ITINERARIO)
REFERENCES ITINERARIOS(ID);

ALTER TABLE PROGRAMACION_TRIPULANTES
ADD CONSTRAINT FK_ID_EMPLEADO
FOREIGN KEY (ID_EMPLEADO)
REFERENCES EMPLEADOS(ID);

ALTER TABLE EMPLEADOS
ADD CONSTRAINT FK_ID_CIUDAD
FOREIGN KEY (ID_CIUDAD)
REFERENCES CIUDADES(ID);

ALTER TABLE PILOTOS
ADD CONSTRAINT FK_ID_EMPLEADOS
FOREIGN KEY (ID_EMPLEADO)
REFERENCES EMPLEADOS(ID);

ALTER TABLE CHECKIN
ADD CONSTRAINT FK_ID_ITINERARIOS
FOREIGN KEY (ID_ITINERARIO)
REFERENCES ITINERARIOS(ID);

ALTER TABLE CHECKIN
ADD CONSTRAINT FK_ID_PASAJERO
FOREIGN KEY (ID_PASAJERO)
REFERENCES PASAJEROS(ID);

ALTER TABLE CHECKIN
ADD CONSTRAINT FK_ID_CIUDADES
FOREIGN KEY (ID_CIUDAD)
REFERENCES CIUDADES(ID);

ALTER TABLE AVIONES
ADD CONSTRAINT FK_ID_AVIONES
FOREIGN KEY (ID_AEROPUERTO)
REFERENCES AEROPUERTOS(ID);

ALTER TABLE LOGS
ADD CONSTRAINT FK_ITINERARIO_ID
FOREIGN KEY (ID_ITINERARIO)
REFERENCES ITINERARIOS(ID);

ALTER TABLE AEROPUERTOS
ADD CONSTRAINT FK_CIUDADES_AERO
FOREIGN KEY (ID_CIUDAD)
REFERENCES CIUDADES(ID);



-----Check---------
ALTER TABLE AVIONES
ADD CONSTRAINT CK_ESTADO_AVION CHECK(ESTADO IN ('Vuelo', 'Tierra', 'Mantenimiento', 'Reparación'));


ALTER TABLE EMPLEADOS
    ADD CONSTRAINT CK_ESTADO CHECK (ESTADO IN ('En_vuelo','Activo','Inactivo','Jubilado','Suspendido','Despedido','En_entrenamiento','Licencia','Vacaciones'));

ALTER TABLE EMPLEADOS
    ADD CONSTRAINT CK_TIPO CHECK (TIPO IN ('Piloto','TCP'));
    
ALTER TABLE EMPLEADOS
    ADD CONSTRAINT CK_SEXO CHECK (SEXO IN ('Masculino','Femenino'));
    
ALTER TABLE PILOTOS
    ADD CONSTRAINT CK_NIVEL CHECK (NIVEL_INGLES IN ('Nivel_1_Pre-elementary', 'Nivel_2_Elementary','Nivel_3_Pre-Operational','Nivel_4_Operational', 'Nivel_5_Extended', 'Nivel_6_Expert'));



    
ALTER TABLE ITINERARIOS
    ADD CONSTRAINT CK_ESTADO_ITINERARIO CHECK (ESTADO IN ('En_vuelo', 'Cancelado', 'Retrasado', 'Confirmado', 'Abordando', 'Programado', 'Aterrizado'));
    
ALTER TABLE PASAJEROS
    ADD CONSTRAINT CK_TIPO_DOCUMENTO CHECK (TIPO_DOCUMENTO IN ('Cedula','Pasaporte','DNI','Cedula_de_extranjeria'));
    
ALTER TABLE PILOTOS
    ADD CONSTRAINT CK_TIPO_LICENCIA CHECK (TIPO_LICENCIA IN ('CPL','CPL_IFR','CPL_ME','ATPL'));

ALTER TABLE CHECKIN
    ADD CONSTRAINT CK_TIPOCHECKIN CHECK (TIPO IN ('Fisico','Virtual'));
    
ALTER TABLE PILOTOS
ADD CONSTRAINT CK_CARGO CHECK(CARGO IN ('Piloto','Copiloto'));

/
-----------Secuencias---------------

---VUELOS-----
CREATE SEQUENCE VUELOS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;

/

create or replace TRIGGER VUELOS_tggr
BEFORE INSERT ON VUELOS
FOR EACH ROW
BEGIN
  SELECT VUELOS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
   
   / 
----- ITINERARIOS-----

CREATE SEQUENCE ITINERARIOS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER ITINERARIOS_tggr
BEFORE INSERT ON ITINERARIOS
FOR EACH ROW
BEGIN
  SELECT ITINERARIOS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
--------PILOTOS----
CREATE SEQUENCE PILOTOS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER PILOTOS_tggr
BEFORE INSERT ON PILOTOS
FOR EACH ROW
BEGIN
  SELECT PILOTOS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
------PROGRAMACION_TRIPULANTES-----

CREATE SEQUENCE PROGRAMACION_TRIPULANTES_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER PROGRAMACION_TRIPULANTES_tggr
BEFORE INSERT ON PROGRAMACION_TRIPULANTES
FOR EACH ROW
BEGIN
  SELECT PROGRAMACION_TRIPULANTES_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
------CIUDADES------
CREATE SEQUENCE CIUDADES_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER CIUDADES_tggr
BEFORE INSERT ON CIUDADES
FOR EACH ROW
BEGIN
  SELECT CIUDADES_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
------EMPLEADOS----

CREATE SEQUENCE EMPLEADOS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER EMPLEADOS_tggr
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
BEGIN
  SELECT EMPLEADOS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
-------RUTAS---
CREATE SEQUENCE RUTAS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER RUTAS_tggr
BEFORE INSERT ON RUTAS
FOR EACH ROW
BEGIN
  SELECT RUTAS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
-----CHECKIN------------

CREATE SEQUENCE CHECKIN_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER CHECKIN_tggr
BEFORE INSERT ON CHECKIN
FOR EACH ROW
BEGIN
  SELECT CHECKIN_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
-----AVIONES----
CREATE SEQUENCE AVIONES_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER AVIONES_tggr
BEFORE INSERT ON AVIONES
FOR EACH ROW
BEGIN
  SELECT AVIONES_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
-----PASAJEROS----
CREATE SEQUENCE PASAJEROS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER PASAJEROS_tggr
BEFORE INSERT ON PASAJEROS
FOR EACH ROW
BEGIN
  SELECT PASAJEROS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
----LOGS----

CREATE SEQUENCE LOGS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER LOGS_tggr
BEFORE INSERT ON LOGS
FOR EACH ROW
BEGIN
  SELECT LOGS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
/
----AEROPUERTOS--

CREATE SEQUENCE AEROPUERTOS_SEQ
MINVALUE 1
MAXVALUE 9999999999999999999
INCREMENT BY 1 
START WITH 1
NOCACHE
NOCYCLE;
/
create or replace TRIGGER AEROPUERTOS_tggr
BEFORE INSERT ON AEROPUERTOS
FOR EACH ROW
BEGIN
  SELECT AEROPUERTOS_SEQ.NEXTVAL 
  INTO :new.ID
  FROM dual;
END;
   
   
   